<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LSM-Tree on Jarvis`s library</title>
    <link>https://www.liunaijie.top/tags/lsm-tree/</link>
    <description>Recent content in LSM-Tree on Jarvis`s library</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 10 Sep 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.liunaijie.top/tags/lsm-tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LSM-Tree</title>
      <link>https://www.liunaijie.top/coding/algorithm/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/lsm-tree/</link>
      <pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://www.liunaijie.top/coding/algorithm/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/lsm-tree/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liunaijie/images/master/202309112128645.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;写入流程：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;先将记录写到WAL Log中（磁盘）&lt;/li&gt;&#xA;&lt;li&gt;将数据写到内存中的MemTable，MemTable使用树或其他可以有序的结构进行存储&lt;/li&gt;&#xA;&lt;li&gt;当Memtable数据满了，将MemTable变成Immutable Memtable即不可变数据，将这个数据落地，并新建Memtable来接收数据&lt;/li&gt;&#xA;&lt;li&gt;在level0层，接收的是Immutable Memtable落地的数据块，这一层每个SSTable里数据有序，但整层是无序的，并且还可能重复&lt;/li&gt;&#xA;&lt;li&gt;定时触发Campaction操作&#xA;即将level0层的数据块合并，写到level1层，将level1层的数据块合并写到level2层。。。&#xA;从level1层之后每一层的数据全局有序，唯一。&#xA;每一层的数据块大小不一致，越往下容量越大&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
